---
version: 2.1
jobs:
  run_pre_commit:
    docker:
      - image: quay.io/astronomer/ci-pre-commit:2021-09
    steps:
      - checkout
      - run:
          name: Create pre-commit-cache-key.txt
          command: |
            cp .pre-commit-config.yaml /tmp/pre-commit-cache-key.txt
            python --version --version | sed 's/^/# /' >> /tmp/pre-commit-cache-key.txt
      - restore_cache:
          keys:
            - pre-commit-cache-{{ checksum "/tmp/pre-commit-cache-key.txt" }}
      - run:
          name: Install pre-commit hooks
          command: pre-commit install-hooks
      - save_cache:
          key: pre-commit-cache-{{ checksum "/tmp/pre-commit-cache-key.txt" }}
          paths:
            - ~/.cache/pre-commit
      - run:
          name: Run pre-commit
          command: pre-commit run --all-files --show-diff-on-failure
  build:
    executor: docker-executor
    steps:
      - docker-build:
          image_name: certgenerator
          dockerfile: Dockerfile
  scan-trivy:
    docker:
      - image: docker:20.10-git
    steps:
      - trivy-scan:
          image_name: certgenerator
  functional-test:
    machine:
      image: ubuntu-2004:202104-01
      resource_class: xlarge
    steps:
      - functional-test

workflows:
  test:
    jobs:
      - run_pre_commit
      - build
      - functional-test:
          requires:
            - build
      - scan-trivy:
          requires:
            - build
executors:
  docker-executor:
    environment:
      GIT_ORG: astronomer
      DOCKER_REPO: astronomerinc
    docker:
      - image: circleci/python:3
commands:
  functional-test:
    description: "Run functional testing for certgenerator"
    steps:
      - checkout
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Run component test
          command: |
            set -xe
            pyenv global 3.9.4
            sudo apt-get update
            sudo apt-get install -y libpq-dev python-dev
            docker load -i "/tmp/workspace/<< parameters.image_name >>.tar
            cd tests/functionaltests
            pip install -r requirement.txt
            pytest .
  docker-build:
    description: "Build a Docker image"
    parameters:
      dockerfile:
        type: string
        default: Dockerfile
      path:
        type: string
        default: "."
      image_name:
        type: string
        default: $CIRCLE_PROJECT_REPONAME
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
          version: 20.10.2
      - run:
          name: Build the Docker image
          command: |
            set -xe
            image_name="<< parameters.image_name >>"
            docker build \
              --label="io.astronomer.build.branch=$CIRCLE_BRANCH" \
              --label="io.astronomer.build.date=$(date +%F)" \
              --label="io.astronomer.build.job.id=$CIRCLE_BUILD_NUM" \
              --label="io.astronomer.build.job.name=$CIRCLE_JOB" \
              --label="io.astronomer.build.repo=$CIRCLE_REPOSITORY_URL" \
              --label="io.astronomer.build.sha=$CIRCLE_SHA1" \
              --label="io.astronomer.build.unixtime=$(date +%s)" \
              --label="io.astronomer.build.url=$CIRCLE_BUILD_URL" \
              --label="io.astronomer.build.workflow.id=$CIRCLE_WORKFLOW_ID" \
              --tag $image_name \
              --file << parameters.path>>/<< parameters.dockerfile >> \
              --build-arg BUILD_NUMBER=${CIRCLE_BUILD_NUM} \
              << parameters.path >>
            docker save -o << parameters.image_name >>.tar $image_name
            docker inspect "$image_name"
      - persist_to_workspace:
          root: .
          paths:
            - "./*.tar"
  trivy-scan:
    description: "Trivy: Vulnerability scanner a Docker image"
    parameters:
      image_name:
        type: string
        default: $CIRCLE_PROJECT_REPONAME
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.2
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Load archived Docker image
          command: docker load -i /tmp/workspace/<< parameters.image_name >>.tar
      - run:
          name: Install trivy
          command: |
            apk add --update-cache --upgrade curl rpm
            curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/master/contrib/install.sh | sh -s -- -b /usr/local/bin
      - restore_cache:
          keys:
            - trivy-cache
      - run:
          name: Scan the local image with trivy
          command: |
            trivy --ignorefile trivyignore --cache-dir /tmp/workspace/trivy-cache --ignore-unfixed -s HIGH,CRITICAL --exit-code 1 --no-progress << parameters.image_name >>
      - save_cache:
          key: trivy-cache
          paths:
            - /tmp/workspace/trivy-cache
